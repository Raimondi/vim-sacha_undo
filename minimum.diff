diff --git a/autoload/sacha_undo.vim b/autoload/sacha_undo.vim
index b0cc28a..eb72927 100644
--- a/autoload/sacha_undo.vim
+++ b/autoload/sacha_undo.vim
@@ -16,8 +16,8 @@ function! Asciiedges(seen, rev, parents)
   endfor
   let ncols = len(a:seen)
   call remove(a:seen, nodeidx)
-  call insert(a:seen, newparents, nodeidx)
-  let edges = map(copy(knownparents), '[nodeidx, index(a:seen, v.val)]')
+  call extend(a:seen, newparents, nodeidx)
+  let edges = map(copy(knownparents), '[nodeidx, index(a:seen, v:val)]')
   if len(newparents) > 0
     call add(edges, [nodeidx, nodeidx])
   endif
@@ -74,6 +74,7 @@ function! Fix_long_right_edges(edges)
     if end > start
       let a:edges[i] = [start, end + 1]
     endif
+    let i += 1
   endwhile
 endfunction
 function! Ascii(buf, state, type, char, text, coldata)
@@ -139,7 +140,7 @@ function! Ascii(buf, state, type, char, text, coldata)
   let shift_interline = repeat(['|', ' '], idx)
   if coldiff == -1
     let n_spaces = 1
-    let edge_cg = '/'
+    let edge_ch = '/'
   elseif coldiff == 0
     let n_spaces = 2
     let edge_ch = '|'
@@ -190,7 +191,7 @@ function! Generate(dag, edgefn, current)
   let buf = Buffer()
   " TODO what's that list?
   for [node, parents] in a:dag
-    let age_label = get(node, 'time', 'Original')
+    let age_label = (node.time == 0) ? 'Original' : (strftime('%S', node.time) . ' seconds ago')
     let line = printf('[%s] %s', node.n, age_label)
     if node.n == a:current
       let char = '@'
@@ -259,8 +260,8 @@ function! Make_nodes(alts, nodes, ...) "{{{1
     let newhead = has_key(alt, 'newhead')
     let node = Node(alt.seq, parent, alt.time, curhead, newhead)
     call add(a:nodes, node)
-    if has_key(node, 'alt')
-      call Make_nodes(alt.alt, nodes, parent)
+    if has_key(alt, 'alt')
+      call Make_nodes(alt.alt, a:nodes, parent)
     endif
     let parent = node
   endfor
